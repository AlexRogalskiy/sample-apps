Hello World Servlet
--------------------

This example shows how a web application written using Java Servlets
can be deployed using CloudARK.

The Dockerfile defines multi-stage Docker build.
First stage uses a Docker image consisting of jdk and maven
to build the Servlet war file.
Second stage uses Tomcat Docker image to run this war file.

There are two environment yaml files available in the folder:
a) environment-local.yaml should be used for local deployment
b) environment-ecs.yaml should be used for AWS ECS deployment

==================
Deploying locally
==================

$ cld env create local-servlet-env environment-local.yaml
$ cld app deploy servlet-app-local <env-id> --port 8080
$ curl http://localhost:<port>/hello-world-servlet/

===========================
Deploying locally (on Mac)
===========================
If you are using Mac OS, the application URL consisting of localhost:<port>
may not respond because of a known issue [1] in Docker for Mac.

You can get around this issue by using the IP address of the VM which is created
by Docker for Mac as shown below:

curl http://192.168.99.100:<port>/hello-world-servlet/

(You can find out IP of VM by executing following command: docker-machine ip default)

Note that CloudARK does not internally implement this workaround. As a result cloudark
will wait for your application to become responsive and will eventually timeout.

=====================
Deploying on AWS ECS
=====================

$ cld env create aws-servlet-env environment-ecs.yaml
$ cld app deploy servlet-app <env-id> --port 8080
$ curl <app_ip_url> or curl <app_url>


[1] <TODO: Put link to Docker github issue>

